{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FiercePC\\\\Desktop\\\\VSCode\\\\Appli-EPRD_Drive_API\\\\application-front\\\\src\\\\Components\\\\SecurityRoute.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecurityRoute = ({\n  role\n}) => {\n  const userRole = localStorage.getItem(\"role\");\n  if (!userRole || userRole !== \"admin\" && userRole !== \"user\") {\n    // Si l'utilisateur n'est pas authentifié ou n'a pas le bon rôle, redirigez-le vers la page de connexion\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Sinon, affichez le contenu protégé\n  role == \"admin\" ? /*#__PURE__*/_jsxDEV(AdminPage, {\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(UserPage, {\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = SecurityRoute;\nexport default SecurityRoute;\nvar _c;\n$RefreshReg$(_c, \"SecurityRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","SecurityRoute","role","userRole","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","AdminPage","onLogout","handleLogout","UserPage","_c","$RefreshReg$"],"sources":["C:/Users/FiercePC/Desktop/VSCode/Appli-EPRD_Drive_API/application-front/src/Components/SecurityRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst SecurityRoute = ({ role }) => {\r\n    const userRole = localStorage.getItem(\"role\");\r\n\r\n    if (!userRole || (userRole !== \"admin\" && userRole !== \"user\")) {\r\n        // Si l'utilisateur n'est pas authentifié ou n'a pas le bon rôle, redirigez-le vers la page de connexion\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // Sinon, affichez le contenu protégé\r\n    role == \"admin\" ? (\r\n        <AdminPage onLogout={handleLogout} />\r\n    ) : (\r\n        <UserPage onLogout={handleLogout} />\r\n    ); \r\n};\r\n\r\nexport default SecurityRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE7C,IAAI,CAACF,QAAQ,IAAKA,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,MAAO,EAAE;IAC5D;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACAR,IAAI,IAAI,OAAO,gBACXF,OAAA,CAACW,SAAS;IAACC,QAAQ,EAAEC;EAAa;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAErCV,OAAA,CAACc,QAAQ;IAACF,QAAQ,EAAEC;EAAa;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACtC;AACL,CAAC;AAACK,EAAA,GAdId,aAAa;AAgBnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}