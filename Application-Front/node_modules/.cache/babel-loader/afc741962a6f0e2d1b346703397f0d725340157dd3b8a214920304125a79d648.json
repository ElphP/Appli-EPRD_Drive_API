{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FiercePC\\\\Desktop\\\\VSCode\\\\Appli-EPRD_Drive_API\\\\application-front\\\\src\\\\Components\\\\Admin\\\\Modal\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  show,\n  handleClose,\n  changeOnDB\n}) => {\n  _s();\n  const showHideClassName = show ? \"modal display-flex\" : \"modal display-none\";\n  const overlay = show ? \"overlay display-block\" : \"overlay display-none\";\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [messUpLoad, setMessUpLoad] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleChangeTitre = event => {\n    setTitre(event.target.value);\n  };\n  useEffect(() => {\n    if (!titre && !selectedFile) {\n      setMessUpLoad(\"Choisissez un fichier et donnez-lui un nom unique.\");\n    } else if (!titre) {\n      setMessUpLoad(\"Le nom est requis.\");\n    } else if (!selectedFile) {\n      setMessUpLoad(\"Aucun fichier PDF n'a été sélectionné.\");\n    } else {\n      setMessUpLoad(\"\");\n    }\n  }, [titre, selectedFile]);\n  useEffect(() => {\n    if (!show) {\n      // Réinitialise les valeurs des inputs quand la modal devient cachée\n      setTitre(\"\");\n      setSelectedFile(null);\n    }\n  }, [show]);\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Un fichier doit être sélectionné!\");\n      return;\n    } else if (titre == null || titre === \"\") {\n      alert(\"Le titre du fichier est obligatoire!\");\n      return;\n    } else {\n      console.log(\"Fichier sélectionné :\", selectedFile);\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      formData.append(\"nom\", titre);\n      try {\n        const response = await fetch(\"https://127.0.0.1:8000/drive_API/upLoadFile\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ` + localStorage.getItem(\"token\")\n          },\n          body: formData // Envoi du FormData\n        });\n        const data = await response.json();\n        if (!response.ok) {} else {\n          console.log(\"Réponse:\", data);\n          handleClose();\n        }\n      } catch (error) {\n        console.error(\"Erreur:\", error);\n      }\n    }\n\n    //Appel API\n    // Create Post\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: overlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showHideClassName,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titre\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameFile\",\n            children: [\"Titre de la partition:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nameFile\",\n            id: \"nameFile\",\n            value: titre,\n            onChange: handleChangeTitre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upLoad\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputUpload\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange,\n              accept: \"application/pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fichierSelect\",\n              children: selectedFile ? selectedFile.name : \"Pas de fichier sélectionné\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            className: \"btnModal btnModal1\",\n            children: \"T\\xE9l\\xE9charger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messUpLoad\",\n          children: messUpLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"btnModal btnModal2 btnCloseUpLoad\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUpload, \"oAxMXEIxabX7nTJT4lG10weYlxE=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","show","handleClose","changeOnDB","_s","showHideClassName","overlay","selectedFile","setSelectedFile","messUpLoad","setMessUpLoad","titre","setTitre","handleFileChange","event","target","files","handleChangeTitre","value","handleUpload","alert","console","log","formData","FormData","append","response","fetch","method","headers","Authorization","localStorage","getItem","body","data","json","ok","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/FiercePC/Desktop/VSCode/Appli-EPRD_Drive_API/application-front/src/Components/Admin/Modal/FileUpload.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport  \"./FileUpload.css\";\r\n\r\nconst FileUpload = ({show, handleClose, changeOnDB}) => {\r\n\r\n     const showHideClassName = show\r\n         ? \"modal display-flex\"\r\n         : \"modal display-none\";\r\n    const overlay = show\r\n        ? \"overlay display-block\"\r\n        : \"overlay display-none\";\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [messUpLoad, setMessUpLoad] = useState(\"\");\r\n    const [titre, setTitre] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleChangeTitre = (event) =>  {\r\n         setTitre(event.target.value);\r\n    }\r\n\r\n     useEffect(() => {\r\n        if (!titre && !selectedFile) {\r\n            setMessUpLoad(\"Choisissez un fichier et donnez-lui un nom unique.\");\r\n        } else if (!titre) {\r\n            setMessUpLoad(\"Le nom est requis.\");\r\n        } else if (!selectedFile) {\r\n            setMessUpLoad(\"Aucun fichier PDF n'a été sélectionné.\");\r\n        } else {\r\n            setMessUpLoad(\"\");\r\n        }\r\n     }, [titre,selectedFile]);\r\n\r\n      useEffect(() => {\r\n          if (!show) {\r\n              // Réinitialise les valeurs des inputs quand la modal devient cachée\r\n              setTitre(\"\");\r\n              setSelectedFile(null);\r\n          }\r\n      }, [show]);\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert(\"Un fichier doit être sélectionné!\");\r\n            return;\r\n        }\r\n        else if(titre == null || titre ===\"\")  {\r\n              alert(\"Le titre du fichier est obligatoire!\");\r\n              return;\r\n        }\r\n        else {\r\n            console.log(\"Fichier sélectionné :\", selectedFile);\r\n             const formData = new FormData();\r\n             formData.append(\"file\", selectedFile);\r\n             formData.append(\"nom\", titre);\r\n\r\n              try {\r\n                  const response = await fetch(\r\n                      \"https://127.0.0.1:8000/drive_API/upLoadFile\",\r\n                      {\r\n                          method: \"POST\",\r\n                          headers: {\r\n                              Authorization: `Bearer `+localStorage.getItem(\"token\")\r\n                          },\r\n                          body: formData, // Envoi du FormData\r\n                      }\r\n                  );\r\n\r\n                  const data = await response.json();\r\n                  if(!response.ok)  {\r\n\r\n                  }\r\n                  else  {\r\n                      console.log(\"Réponse:\", data);\r\n                    handleClose();\r\n                  }\r\n              } catch (error) {\r\n                  console.error(\"Erreur:\", error);\r\n              }\r\n        }\r\n       \r\n\r\n     \r\n        //Appel API\r\n    // Create Post\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={overlay}></div>\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-main\">\r\n                    <div className=\"titre\">\r\n                        <label htmlFor=\"nameFile\">\r\n                            Titre de la partition:{\" \"}\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nameFile\"\r\n                            id=\"nameFile\"\r\n                            value={titre}\r\n                            onChange={handleChangeTitre}\r\n                        />\r\n                    </div>\r\n                    <div className=\"upLoad\">\r\n                        <div className=\"inputUpload\">\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={handleFileChange}\r\n                                accept=\"application/pdf\"\r\n                            />\r\n                            <span className=\"fichierSelect\">\r\n                                {selectedFile\r\n                                    ? selectedFile.name\r\n                                    : \"Pas de fichier sélectionné\"}\r\n                            </span>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleUpload}\r\n                            className=\"btnModal btnModal1\"\r\n                        >\r\n                            Télécharger\r\n                        </button>\r\n                    </div>\r\n\r\n                    <p className=\"messUpLoad\">{messUpLoad}</p>\r\n                    <button\r\n                        onClick={handleClose}\r\n                        className=\"btnModal btnModal2 btnCloseUpLoad\"\r\n                    >\r\n                        Fermer\r\n                    </button>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}