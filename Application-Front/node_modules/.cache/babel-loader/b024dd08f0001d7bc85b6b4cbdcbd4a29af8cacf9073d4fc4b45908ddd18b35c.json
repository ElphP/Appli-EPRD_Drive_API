{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FiercePC\\\\Desktop\\\\VSCode\\\\Appli-EPRD_Drive_API\\\\application-front\\\\src\\\\Components\\\\Admin\\\\Modal\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  show,\n  handleClose\n}) => {\n  _s();\n  const showHideClassName = show ? \"modal display-flex\" : \"modal display-none\";\n  const overlay = show ? \"overlay display-block\" : \"overlay display-none\";\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [messUpLoad, setMessUpLoad] = useState(\"\");\n  const [titre, setTitre] = useState(\"\");\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleChangeTitre = event => {\n    setTitre(event.target.value);\n  };\n  useEffect(() => {\n    if (mail === \"\" || mdp === \"\" || alias === \"\") {\n      setMess(\"Les 3 champs sont requis pour la création d'un utilisateur!\");\n    } else {\n      setMess(\"\");\n    }\n  }, [titre, selectedFile]);\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Un fichier doit être sélectionné!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    console.log(formData);\n\n    //Appel API\n    // Create Post\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: overlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showHideClassName,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upLoad\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputUpload\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fichierSelect\",\n              children: selectedFile ? selectedFile.name : \"Pas de fichier sélectionné\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            className: \"btnModal btnModal1\",\n            children: \"T\\xE9l\\xE9charger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titre\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameFile\",\n            children: [\"Titre de la partition:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nameFile\",\n            id: \"nameFile\",\n            onChange: handleChangeTitre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"btnModal btnModal2\",\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messUpLoad\",\n          children: messUpLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUpload, \"lDGmfW4vFjOuOPVbm2Oq7wI+25s=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","show","handleClose","_s","showHideClassName","overlay","selectedFile","setSelectedFile","messUpLoad","setMessUpLoad","titre","setTitre","handleFileChange","event","target","files","handleChangeTitre","value","mail","mdp","alias","setMess","handleUpload","alert","formData","FormData","append","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","name","onClick","htmlFor","id","_c","$RefreshReg$"],"sources":["C:/Users/FiercePC/Desktop/VSCode/Appli-EPRD_Drive_API/application-front/src/Components/Admin/Modal/FileUpload.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport  \"./FileUpload.css\";\r\n\r\nconst FileUpload = ({show, handleClose}) => {\r\n\r\n     const showHideClassName = show\r\n         ? \"modal display-flex\"\r\n         : \"modal display-none\";\r\n    const overlay = show\r\n        ? \"overlay display-block\"\r\n        : \"overlay display-none\";\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [messUpLoad, setMessUpLoad] = useState(\"\");\r\n    const [titre, setTitre] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleChangeTitre = (event) =>  {\r\n         setTitre(event.target.value);\r\n    }\r\n\r\n     useEffect(() => {\r\n         if (mail === \"\" || mdp === \"\" || alias === \"\") {\r\n             setMess(\r\n                 \"Les 3 champs sont requis pour la création d'un utilisateur!\"\r\n             );\r\n         } else {\r\n             setMess(\"\");\r\n         }\r\n     }, [titre,selectedFile]);\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert(\"Un fichier doit être sélectionné!\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n\r\n        console.log(formData);\r\n\r\n     \r\n        //Appel API\r\n    // Create Post\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={overlay}></div>\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-main\">\r\n                    <div className=\"upLoad\">\r\n                        <div className=\"inputUpload\">\r\n                            <input type=\"file\" onChange={handleFileChange} />\r\n                            <span className=\"fichierSelect\">\r\n                                {selectedFile\r\n                                    ? selectedFile.name\r\n                                    : \"Pas de fichier sélectionné\"}\r\n                            </span>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleUpload}\r\n                            className=\"btnModal btnModal1\"\r\n                        >\r\n                            Télécharger\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"titre\">\r\n                        <label htmlFor=\"nameFile\">\r\n                            Titre de la partition:{\" \"}\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nameFile\"\r\n                            id=\"nameFile\"\r\n                            onChange={handleChangeTitre}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={handleClose}\r\n                        className=\"btnModal btnModal2\"\r\n                    >\r\n                        Fermer\r\n                    </button>\r\n                    <p className=\"messUpLoad\">{messUpLoad}</p>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}